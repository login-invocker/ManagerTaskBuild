{"version":3,"sources":["config/config.js","services/user-service.js","Components/nofication-component.js","Components/header-pages.js","pages/Login-page.js","services/task-bot-discord.js","pages/Create.Task-pages.js","pages/manager.task.pages.js","Components/Doughnut.component.js","Components/PiceChartRechar.component.js","pages/ManagerTime-pages.js","pages/Register-User.page.js","Components/Bar-chart.component.js","pages/analytics.Task-page.js","config/router.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","API_URL","axios","require","config","registerUserService","user","a","userRequest","username","password","firstName","lastName","email","cellphone","birthday","post","res","loginService","openNotificationWithIcon","props","notification","type","message","description","HeaderPage","pro","className","onBack","onback","title","subTitle","extra","LoginPages","history","useHistory","location","useLocation","auth","useContext","authContext","from","state","pathname","onFinish","values","responseData","status","Notification","signin","replace","data","labelCol","span","wrapperCol","name","initialValues","remember","onFinishFailed","errorInfo","Item","label","rules","required","Password","offset","htmlType","createtask","task","content","isModel","isEmergency","isImportant","getTasks","get","response","removeTask","delete","id","updateTask","put","code","getMatrixTasks","getDataForBarChar","dateRanger","dataRequest","startDate","endDate","layout","tailLayout","CreateTask","checkedChildren","unCheckedChildren","dateFormatList","mapTask","dataRes","dataMap","i","length","push","key","toString","date","moment","format","EditableCell","editing","dataIndex","inputType","record","children","index","restProps","inputNode","style","margin","valuePropName","ManagerTask","Form","useForm","form","useState","setData","editingKey","setEditingKey","searchText","setSearchText","searchedColumn","setSearchedColumn","handleSearch","selectedKeys","confirm","useEffect","callApi","isEditing","cancel","save","validateFields","row","newData","findIndex","item","splice","remove","isRemoved","mergedColumns","width","editable","filterDropdown","setSelectedKeys","clearFilters","padding","placeholder","value","onChange","e","target","onPressEnter","marginBottom","display","onClick","icon","SearchOutlined","size","handleReset","filterIcon","filtered","color","undefined","onFilter","toLowerCase","includes","onFilterDropdownVisibleChange","visible","render","text","highlightStyle","backgroundColor","searchWords","autoEscape","textToHighlight","filters","Date","_","href","marginRight","onConfirm","marginLeft","Link","disabled","setFieldsValue","edit","map","col","onCell","SyncOutlined","spin","component","components","body","cell","bordered","dataSource","columns","rowClassName","pagination","DoughnutComponent","colors","labels","datasets","onElementsClick","elems","console","log","_datasetIndex","_index","option","RADIAN","Math","PI","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","radius","x","cos","y","sin","fill","textAnchor","dominantBaseline","toFixed","PiceChartComponent","PieChart","height","Pie","labelLine","dataKey","entry","Cell","allTask","ManagerTimePage","React","setReload","dataTask","forEach","randomColor","floor","random","setBg","timePercent","pull","dataForPiceChartRechar","RegisterPage","dataRespone","BarChartComponent","setDataTask","allTaslType","setAllTaskType","donetaskType","setDoneTaskType","unTaskType","setUntaskType","isChecked","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","taskDone","taskUnfinished","options","legend","RangePicker","DatePicker","routes","path","LoginPage","isPrivate","TaskManager","TimeManager","then","direction","ranges","Today","startOf","endOf","dates","dateStrings","ranger","RouteConfigExample","route","RouteWithSubRoutes","PrivateRoute","rest","to","Header","Layout","Content","Footer","Sider","createContext","App","ProvideAuth","breakpoint","collapsedWidth","onBreakpoint","broken","onCollapse","collapsed","AuthButton","theme","mode","defaultSelectedKeys","UserOutlined","PlusOutlined","DatabaseOutlined","PieChartTwoTone","FundTwoTone","minHeight","textAlign","fakeAuth","isAuthenticated","cb","setTimeout","signout","setUser","useProvideAuth","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a8b5759.chunk.js","sourcesContent":["const API_URL = \"https://task-bot-server.invocker.repl.co\"\n\nmodule.exports = {\n    API_URL\n}","const axios = require('axios')\nconst config = require('../config/config')\n\nconst registerUserService = async (user) => {\n    const userRequest = {\n        \"username\": user.username,\n        \"password\": user.password,\n        \"firstName\": user.firstName,\n        \"lastName\": user.lastName,\n    \n        \"email\": user.email,\n        \"cellphone\": user.cellphone,\n        \"birthday\": user.birthday\n    }\n\n    \n    const res = await axios.post(`${config.API_URL}/api/user`, userRequest)\n    return res\n} \n\nconst loginService = async (user) => {\n\n    const userRequest = {\n        \"username\": user.username,\n        \"password\": user.password\n    }\n    \n    const res = await axios.post(`${config.API_URL}/api/user/login`, userRequest)\n    return res\n}\nexport{\n    loginService,\n    registerUserService\n}","import { notification } from 'antd';\n\nconst openNotificationWithIcon = props => {\n  notification[props.type]({\n    message: props.message,\n    description: props.description\n });\n};\n\n\nexport default openNotificationWithIcon","import { PageHeader } from 'antd';\n\nconst HeaderPage = (pro) => {\nreturn (\n  <PageHeader\n    className=\"site-page-header\"\n    onBack={() => pro.onback}\n    title={pro.title}\n    subTitle={pro.subTitle}\n    extra= {pro.extra}\n  />\n)\n}\n\nexport default HeaderPage\n","import React, { useContext } from \"react\";\nimport {\n  BrowserRouter as Router,\n  useHistory,\n  useLocation\n} from \"react-router-dom\";\nimport { Form, Input, Button } from 'antd';\nimport {authContext} from '../App'\nimport {loginService} from '../services/user-service'\nimport Notification from \"../Components/nofication-component\";\nimport HeaderPage from '../Components/header-pages'\n\nfunction useAuth() {\n  return useContext(authContext);\n}\n\nconst LoginPages = () =>{\n  let history = useHistory();\n  let location = useLocation();\n  let auth = useAuth();\n\n  let { from } = location.state || { from: { pathname: \"/\" } };\n  let login = () => {\n    auth.signin(() => {\n      history.replace(from);\n    });\n  };\n\n  const onFinish = async (values) => {\n    const responseData =  await loginService(values)\n    if(responseData.status !== 201)\n    {\n      Notification({\n        type: \"success\",\n        message: \"Chào mừng đến với You Task!\"\n      })\n      return login()\n    }\n    else{\n      Notification({\n        type: \"error\",\n        message: responseData.data.message\n      })\n      \n    }\n  };\n\n  const onFinishFailed = (errorInfo) => {\n  };\n\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 8,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16,\n  },\n};\n\n  return (\n    <div>\n       <HeaderPage onback=\"null\" title=\"Login\"/>\n      <p>You must log in to view the page at {from.pathname}</p>\n      <Form\n      {...layout}\n      name=\"basic\"\n      initialValues={{\n        remember: true,\n      }}\n      onFinish={onFinish}\n      onFinishFailed={onFinishFailed}\n    >\n      <Form.Item\n        label=\"User Name\"\n        name=\"username\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your name',\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Password\"\n        name=\"password\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your pass!',\n          },\n        ]}\n      >\n        <Input.Password />\n      </Form.Item>\n      <Form.Item {...tailLayout}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Login\n        </Button>\n      </Form.Item>\n    </Form>\n    </div>\n    );\n}\nexport default LoginPages;\n","const axios = require('axios')\nconst config = require('../config/config')\n\nconst createtask = async(task) => {\n    try{\n        axios.post(`${config.API_URL}/api/task`, {\n            \"title\": task.title,\n            \"content\": task.content,\n            \"isModel\": task.isModel,\n            \"isEmergency\": task.isEmergency,\n            \"isImportant\": task.isImportant\n        })\n        return true\n    }catch{\n        return false\n    }\n}\n\nconst getTasks = async() => {\n    try{\n        const response = await axios.get(`${config.API_URL}/api/task`)\n        return response.data\n    }catch{\n        return false\n    }\n}\n\nconst removeTask = async(task) => {\n    // console.log(task)\n    try{\n        const response = await axios.delete(`${config.API_URL}/api/task/${task.id}`)\n        return response.status === 200 ? true : false\n    }catch{\n        return false\n    }\n}\n\nconst updateTask = async (task) => {\n    task.status = true \n    ? task.status === \"Đã hoàn thành\" \n    : false\n    if(task.isModel === \"Yes\" || task.isModel === true){\n        task.isModel = true\n    }else{\n        task.isModel = false\n    }\n\n    if(task.isImportant === \"Yes\" || task.isImportant === true){\n        task.isImportant = true\n    }else{\n        task.isImportant = false\n    }\n\n    if(task.isEmergency === \"Yes\" || task.isEmergency === true){\n        task.isEmergency = true\n    }else{\n        task.isEmergency = false\n    }\n    try{\n        const response = await axios.put(`${config.API_URL}/api/task/`,{\n            task\n        })\n        return response.data.code === 200 ? true : false\n    }catch{\n        return false\n    }\n}\nconst getMatrixTasks = async() => {\n    try{\n        const response = await axios.get(`${config.API_URL}/api/task/eisenhower`)\n        return response.data\n    }catch{\n        return false\n    }\n}\n\nconst getDataForBarChar = async(dateRanger) => {\n    let dataRequest = {}\n    if(dateRanger){\n        dataRequest = {\n        \"startDate\": dateRanger.startDate,\n        \"endDate\": dateRanger.endDate\n        }\n    }\n    \n    try{\n        const response = await axios.post(`${config.API_URL}/api/task/bar-chart`, dataRequest)\n        return response.data\n    }catch{\n        return false\n    }\n}\n\nexport{\n    createtask,\n    getTasks,\n    updateTask,\n    removeTask,\n    getMatrixTasks,\n    getDataForBarChar\n}","import React from \"react\";\nimport HeaderPages from '../Components/header-pages'\nimport { Form, Input, Button, Switch } from 'antd';\nimport {createtask} from '../services/task-bot-discord'\nimport Notification from '../Components/nofication-component';\n\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 8,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16,\n  },\n};\n\nconst CreateTask = () =>{\n    const onFinish = async (values) => {\n        const isCreate = await createtask(values)\n        if(isCreate)\n        return Notification({\n            type: \"success\",\n            message: \"Tạo task thành công\"\n          })\n        else\n        return Notification({\n            type: \"success\",\n            message: \"Tạo task thất bại\"\n          })\n      };\n    \n      const onFinishFailed = (errorInfo) => {\n      };\n  return <>\n  <HeaderPages onback=\"null\" title=\"Create Task\" subTitle=\"Create a today task\"/>\n  <Form\n      {...layout}\n      name=\"basic\"\n      initialValues={{\n        remember: true,\n      }}\n      onFinish={onFinish}\n      onFinishFailed={onFinishFailed}\n    >\n      <Form.Item\n        label=\"Title\"\n        name=\"title\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your title of task',\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Content\"\n        name=\"content\"\n        rules={[\n          {\n            message: 'Please input your content!',\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Model Task\"\n        name=\"isModel\"\n      >\n      <Switch checkedChildren=\"Yes\" unCheckedChildren=\"No\" />\n      </Form.Item>\n      {/* Việc này có quan trọng không? */}\n      <Form.Item\n        label=\"Task important?\"\n        name=\"isImportant\"\n      >\n      <Switch checkedChildren=\"Yes\" unCheckedChildren=\"No\" />\n      </Form.Item>\n            {/* Việc này có khẩn cấp không? */}\n            <Form.Item\n        label=\"Task emergency?\"\n        name=\"isEmergency\"\n      >\n      <Switch checkedChildren=\"Yes\"  unCheckedChildren=\"No\" />\n      </Form.Item>\n\n      <Form.Item {...tailLayout}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n</>\n}\nexport default CreateTask;\n","import React, { useState, useEffect } from 'react';\nimport \"./manage-task.css\"\nimport { \n  Table, Input,\n  Popconfirm, Form, \n  Typography, DatePicker,\n  Alert, Tag, Switch,\n  Button, Space\n} from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport {\n  SyncOutlined,\n  SearchOutlined\n} from '@ant-design/icons';\n\nimport Notification from \"../Components/nofication-component\";\nimport {getTasks, updateTask, removeTask} from \"../services/task-bot-discord\"\nimport moment from 'moment'\nimport HeaderPage from '../Components/header-pages'\n\nconst dateFormatList = ['DD/MM/YYYY', 'DD/MM/YY', 'YYYY-MM-DD'];\n\nconst ManagerTask = () => {\n  const [form] = Form.useForm();\n  const [data, setData] = useState([]);\n  const [editingKey, setEditingKey] = useState('');\n  const [searchText, setSearchText] = useState('');\n  const [searchedColumn, setSearchedColumn] = useState('');\n\n  useEffect(() => {\n    \n    callApi()\n  }, [])\n  // \n\n  function getColumnSearchProps(dataIndex) {\n    return {\n      filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n        <div style={{ padding: 8 }}>\n          <Input\n            // ref={node => {\n            //   this.searchInput = node;\n            // }}\n            placeholder={`Search ${dataIndex}`}\n            value={selectedKeys[0]}\n            onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n            onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n            style={{ width: 188, marginBottom: 8, display: 'block' }}\n          />\n          <Space>\n            <Button\n              type=\"primary\"\n              onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n              icon={<SearchOutlined />}\n              size=\"small\"\n              style={{ width: 90 }}\n            >\n              Search\n            </Button>\n            <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n              Reset\n            </Button>\n          </Space>\n        </div>\n      ),\n      filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n      onFilter: (value, record) =>\n        record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\n      onFilterDropdownVisibleChange: visible => {\n        if (visible) {\n          // setTimeout(() => this.searchInput.select());\n        }\n      },\n      render: text =>\n        searchedColumn === dataIndex ? (\n          <Highlighter\n            highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n            searchWords={[searchText]}\n            autoEscape\n            textToHighlight={text.toString()}\n          />\n        ) : (\n          text\n        ),\n    }\n  };\n\n  function handleSearch(selectedKeys, confirm, dataIndex) {\n    confirm();\n    setSearchText(selectedKeys[0]);\n    setSearchedColumn(dataIndex);\n  };\n\n  function handleReset(clearFilters) {\n    clearFilters();\n    setSearchText('');\n  };\n\n\n  const callApi = async () => {\n    const dataMap = await mapTask()\n      if(dataMap){\n      setData(dataMap)\n      Notification({\n        type: \"success\",\n        message: \"Lấy dữ liệu thành công!\"\n      })\n    }\n    else{\n      Notification({\n        type: \"error\",\n        message: \"Lấy dữ liệu thất bại!\"\n      })\n    }\n  }\n\n  const isEditing = (record) => record.key === editingKey;\n\n  const edit = (record) => {\n    form.setFieldsValue({\n        id: '',\n      title: '',\n      content: '',\n      date: '',\n      isImportant: false,\n      isEmergency: false,\n      isModel:false,\n      ...record,\n    });\n    setEditingKey(record.key);\n  };\n\n  const cancel = () => {\n    setEditingKey('');\n  };\n\n  const save = async (key) => {\n    try {\n      const row = await form.validateFields();\n      row.isModel = (row.isModel === true || row.isModel === \"Yes\")? 'Yes': 'No'\n      row.isImportant = (row.isImportant === true || row.isImportant === \"Yes\") ? \"Yes\": \"No\"\n      row.isEmergency = (row.isEmergency === true || row.isEmergency === \"Yes\")? \"Yes\": 'No'\n      const newData = [...data];\n      const index = newData.findIndex((item) => key === item.key);\n      if (index > -1) {\n        const item = newData[index];    \n\n        newData.splice(index, 1, { ...item, ...row });\n        setData(newData);\n        setEditingKey('');\n        try{\n            const isUpdate = await updateTask(newData[index]);\n            if(isUpdate)\n            {\n              Notification({\n                type: \"success\",\n                message: \"Cập nhật thông tin thành công!\"\n            })\n            setEditingKey('')\n            }\n            \n            else\n            Notification({\n                type: \"error\",\n                message: \"Thử lại sau!\"\n            })\n        }catch{\n            Notification({\n                type: \"error\",\n                message: \"Thử lại sau!\"\n            })\n    }\n      } else {\n        newData.push(row);\n        setData(newData);\n        setEditingKey('');\n      }\n    } catch (errInfo) {\n    }\n  };\n\n  const remove = async (key) => {\n    try {\n      const row = await form.validateFields();\n      const newData = [...data];\n      const index = newData.findIndex((item) => key === item.key);\n      if (index > -1) {\n        try{\n            const isRemoved = await removeTask(newData[index]);\n            newData.splice(index, 1);\n            setData(newData);\n            setEditingKey('');\n            if(isRemoved)\n            Notification({\n                type: \"success\",\n                message: \"Xóa thành công!\"\n            })\n            else\n            Notification({\n                type: \"error\",\n                message: \"Thử lại sau!\"\n            })\n        }catch{\n            Notification({\n                type: \"error\",\n                message: \"Thử lại sau!\"\n            })\n    }\n      } else {\n        newData.push(row);\n        setData(newData);\n        setEditingKey('');\n      }\n    } catch (errInfo) {\n    }\n  };\n\n  const columns = [\n    {\n        title: 'id Task',\n        dataIndex: 'id',\n        width: '10%',\n        editable: false,\n      },\n    {\n      title: 'Title Task',\n      dataIndex: 'title',\n      width: '20%',\n      editable: true,\n      ...getColumnSearchProps('title')\n    },\n    {\n      title: 'Status Task',\n      dataIndex: 'status',\n      width: '10%',\n      editable: false,\n      render: status => {\n        // console.log(status)\n        let color = status === \"Đã hoàn thành\"? 'green' : 'geekblue' ;\n        return (\n          <>\n                <Tag color={color} >\n                  {status}\n                </Tag>\n          </>\n        )\n      },\n      filters: [\n        {\n          text: 'Done',\n          value: \"Đã hoàn thành\",\n        },{\n          text: 'unfinished',\n          value: \"Chưa hoàn thành\",\n        }\n      ],\n      onFilter: (value, record) => (value === record.status)\n    },\n    {\n      title: 'Content Task',\n      dataIndex: 'content',\n      width: '20%',\n      editable: true,\n    },\n    {\n      title: `Date (${dateFormatList[2]})`,\n      dataIndex: 'date',\n      width: '15%',\n      editable: true,\n      filters: [\n        {\n          text: 'Today',\n          value: \"no need value\",\n        }\n      ],\n      onFilter: (value, record) => {\n        const date = new Date();\n        return moment(date).format('YYYY-MM-DD') === record.date\n      }\n    },\n    {\n      title: 'Important',\n      dataIndex: 'isImportant',\n      width: '5%',\n      editable: true,\n      filters: [\n        {\n          text: 'Task Important',\n          value: \"Yes\",\n        },{\n          text: 'Task not Important',\n          value: \"No\",\n        }\n      ],\n      onFilter: (value, record) => record.isImportant === value,\n    },\n    {\n      title: 'Emergency',\n      dataIndex: 'isEmergency',\n      width: '5%',\n      editable: true,\n      filters: [\n        {\n          text: 'Task Emergency',\n          value: \"Yes\",\n        },{\n          text: 'Task not Emergency',\n          value: \"No\",\n        }\n      ],\n      onFilter: (value, record) => record.isEmergency === value,\n    },\n    {\n      title: 'Model task',\n      dataIndex: 'isModel',\n      width: '5%',\n      editable: true,\n      filters: [\n        {\n          text: 'Task Model',\n          value: \"Yes\",\n        }\n      ],\n      onFilter: (value, record) => record.isModel === \"Yes\",\n    },\n    {\n      title: 'operation',\n      dataIndex: 'operation',\n      render: (_, record) => {\n        const editable = isEditing(record);\n        return editable ? (\n          <span>\n            <a\n              href=\"javascript:;\"\n              onClick={() => save(record.key)}\n              style={{\n                marginRight: 8,\n              }}\n            >\n              Save\n            </a>\n            <Popconfirm title=\"Sure to cancel?\" onConfirm={cancel}>\n              <a href=\"javascript:;\">Cancel</a>\n            </Popconfirm>\n            <a\n              href=\"javascript:;\"\n              onClick={() => remove(record.key)}\n              style={{\n                marginLeft: 8,\n              }}\n            >\n              Remove\n            </a>\n          </span>\n        ) : (\n        <>\n          <Typography.Link disabled={editingKey !== ''} onClick={() => edit(record)}>\n            Edit\n          </Typography.Link>\n        </>\n        );\n      },\n    },\n  ];\n\n  const mergedColumns = columns.map((col) => {\n    if (!col.editable) {\n      return col;\n    }\n\n    return {\n      ...col,\n      onCell: (record) => ({\n        record,\n        inputType: col.dataIndex === 'date' \n        ? 'date'\n        : col.dataIndex ==='isModel' || col.dataIndex === 'isImportant' || col.dataIndex === 'isEmergency'\n        ? 'switch'\n        : 'text',\n        dataIndex: col.dataIndex,\n        title: col.title,\n        editing: isEditing(record),\n      }),\n    };\n  });\n\n  // component end\n  return (\n    <>\n    <HeaderPage onback=\"null\" title=\"Manager Task\"\n    extra={[\n      <Button \n        key='1'\n        type=\"primary\" \n        icon={<SyncOutlined spin/>}\n        onClick={() => callApi()}>\n      Click to async data\n        </Button>\n    ]}\n    />\n    <Alert message=\"Dùng lệnh `$done +idTask` channel discord để  đánh dấu hoàn thành task\" type=\"warning\" />\n\n    <Form form={form} component={false}>\n      <Table\n        components={{\n          body: {\n            cell: EditableCell,\n          },\n        }}\n        bordered\n        dataSource={data}\n        columns={mergedColumns}\n        rowClassName=\"editable-row\"\n        pagination={{\n          onChange: cancel,\n        }}\n      />\n    </Form>\n    </>\n  );\n};\n\nconst mapTask = async () => {\n  const dataRes = await getTasks();\n  let dataMap = []\n  if(dataRes){\n    for (let i = 0; i < dataRes.length; i++) {\n        dataMap.push({\n          key: i.toString(),\n          id: dataRes[i]['_id'],\n          title: dataRes[i]['title'],\n          content: dataRes[i]['content'] || \"Chưa cập nhập\",\n          status: dataRes[i]['status'] ? \"Đã hoàn thành\" : \"Chưa hoàn thành\",\n          date: moment(dataRes[i]['date']).format(dateFormatList[2]),\n          isModel: dataRes[i]['isModel'] === true ? 'Yes': 'No',\n          isImportant: dataRes[i]['isImportant'] === true ? \"Yes\": \"No\",\n          isEmergency: dataRes[i]['isEmergency'] === true? \"Yes\": 'No',\n        });\n   }\n    \n   return dataMap\n}\n}\n\nconst EditableCell = ({\n  editing,\n  dataIndex,\n  title,\n  inputType,\n  record,\n  index,\n  children,\n  ...restProps\n}) => {\n  const inputNode = inputType === 'chinh-xac-la-date' \n  ? <DatePicker  \n  format={dateFormatList}  />\n  : inputType === \"switch\"\n  ? <Switch checkedChildren=\"Yes\" unCheckedChildren=\"No\" />\n  : <Input />;\n  return (\n    <td {...restProps}>\n      {editing && inputType !== 'switch'? (\n        <Form.Item\n          name={dataIndex}\n          style={{\n            margin: 0,\n          }}\n          rules={[\n            {\n              required: true,\n              message: `Please Input ${title}!`,\n            },\n          ]}\n        >\n          {inputNode}\n        </Form.Item>\n      ) \n      : editing && inputType === 'switch'\n      ? (\n        <Form.Item\n          name={dataIndex}\n          // switch\n          valuePropName= {record.isModel === true || record.isModel === \"Yes\" && dataIndex === \"isModel\"\n          || record.isImportant === true || record.isImportant === \"Yes\"  && dataIndex === \"isImportant\"\n          || record.isEmergency === true || record.isEmergency === \"Yes\" && dataIndex === \"isEmergency\" ? 'checked': ''}\n          style={{\n            margin: 0,\n          }}\n          rules={[\n            {\n              required: true,\n            },\n          ]}\n        >\n          {inputNode}\n        </Form.Item>\n      ) \n      \n      : (\n        children\n      )}\n    </td>\n  );\n};\n\nexport default ManagerTask","import React from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\n\nconst DoughnutComponent = (props) => {\n    const config = props.config\n    const colors = props.colors\n    return (\n<Doughnut\n        data={{\n          labels: config.labels,\n          datasets: [\n            {\n              label: \"Population (millions)\",\n              backgroundColor: colors,\n              data: config.data\n            }\n          ]\n        }}\n        onElementsClick={elems => {\n            // if required to build the URL, you can \n            // get datasetIndex and value index from an `elem`:\n            if(elems[0])\n            console.log(elems[0]._datasetIndex + ', ' + elems[0]._index);\n            // and then redirect to the target page:\n            // window.location = \"https://example.com\";\n        }}\n        option={{\n          title: {\n            display: true,\n            text: \"Predicted world population (millions) in 2050\"\n          }\n        }}\n      />\n    )\n}\n\nexport default DoughnutComponent","import React from 'react';\nimport { PieChart, Pie, Cell } from 'recharts';\n\nconst RADIAN = Math.PI / 180;\nconst renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n  return (\n    <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n      {`${(percent * 100).toFixed(0)}%`}\n    </text>\n  );\n};\n\nconst PiceChartComponent = (props) => {\n    const config = props.config  \n    const colors = props.colors\n\n\n    return (\n      <PieChart width={400} height={400}>\n        <Pie\n          data={config}\n          cx={200}\n          cy={200}\n          labelLine={false}\n          label={renderCustomizedLabel}\n          outerRadius={80}\n          // fill=\"#8884d8\"\n          dataKey=\"value\"\n        >\n          {config.map((entry, index) => (\n            <Cell key={`cell-${index}`} fill={colors[index % colors.length]} />\n          ))}\n        </Pie>\n      </PieChart>\n    );\n  \n}\n\nexport default PiceChartComponent","import React from \"react\";\nimport { Row, Col,Button } from 'antd';\nimport DoughnutComponent from '../Components/Doughnut.component'\nimport PiceChartRechar from '../Components/PiceChartRechar.component'\nimport {getMatrixTasks} from \"../services/task-bot-discord\"\nimport HeaderPage from '../Components/header-pages'\nimport Notification from \"../Components/nofication-component\";\nimport {\n    SyncOutlined,\n  } from '@ant-design/icons';\n\nlet allTask = []\nlet colors = []\nconst ManagerTimePage = () => {\n    const [reload, setReload] = React.useState({})\n    // const [color, setColors] = React.useState([])\n    React.useEffect(async () => {\n        const dataTask = await getMatrixTasks()\n        if(dataTask){\n            Notification({\n                type: \"success\",\n                message: \"Lấy dữ liệu thành công!\"\n            })\n            allTask = dataTask\n\n            const setBg = () => {\n                    allTask.forEach(() => {\n                    let randomColor = Math.floor(Math.random()*16777215).toString(16);\n                    randomColor = \"#\" + randomColor;\n                    colors.push(randomColor)\n                })    \n            }\n            setBg()\n            setReload('')\n        }\n\n    })\n\n    const wrap2ArrayTask = () => {\n        const titleArray = allTask.map(task => task.title);\n        const timePercentArray  =  allTask.map(task => task.timePercent);\n        const result = {\n            labels:titleArray,\n            data: timePercentArray\n        }\n        return result\n    }\n\n    const dataForPiceChartRechar = () => {\n        let data = [];\n        allTask.forEach(task => {\n            const x = {\n                name: task.title,\n                value:  task.timePercent\n            }\n            data.push(x)\n        })\n        return data\n    }\n\n    return (\n        <>\n        <HeaderPage onback=\"null\" \n        title=\"Manager Time with matrix EISENHOWER\"\n        extra={[\n            <Button type=\"primary\" \n            icon={<SyncOutlined spin/>}\n            onClick={() => setReload()}>\n                Click to async data\n            </Button>\n        ]}\n        />\n        <Row>\n        <Col span={18} push={6}>\n        <DoughnutComponent colors={colors} config={wrap2ArrayTask()}/>\n\n        </Col>\n        <Col span={6} pull={18}>\n        <PiceChartRechar colors={colors} config={dataForPiceChartRechar()}/>\n\n        </Col>\n      </Row>\n      </>\n    )\n}\n\nexport default ManagerTimePage","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  useHistory,\n} from \"react-router-dom\";\nimport { Form, Input, Button } from 'antd';\nimport {registerUserService} from '../services/user-service'\nimport HeaderPage from '../Components/header-pages'\nimport Notification from \"../Components/nofication-component\";\n\n\n\nconst RegisterPage = () =>{\n  let history = useHistory();\n\n  const onFinish = async (values) => {\n    const dataRespone =await registerUserService(values)\n    if(dataRespone.status === 201){\n        Notification({\n            type: \"error\",\n            message: dataRespone.data.message\n          })\n    }else{\n        Notification({\n            type: \"success\",\n            message: \"Tạo tài khoản thành công!\"\n          })\n\n        history.push('/login')\n    }\n    \n  };\n\n  const onFinishFailed = (errorInfo) => {\n  };\n\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 8,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16,\n  },\n};\n\n  return (\n      \n    <div>\n        <HeaderPage onback=\"null\" title=\"Register account\"/>\n\n      <Form\n      {...layout}\n      name=\"basic\"\n      initialValues={{\n        remember: true,\n      }}\n      onFinish={onFinish}\n      onFinishFailed={onFinishFailed}\n    >\n      <Form.Item\n        label=\"User Name\"\n        name=\"username\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your name',\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Password\"\n        name=\"password\"\n        rules={[\n          {\n            message: 'Please input your pass!',\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        label=\"First name\"\n        name=\"firstName\"\n        rules={[\n          {\n            message: 'Please input your pass!',\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        label=\"last name\"\n        name=\"lastName\"\n        rules={[\n          {\n            message: 'Please input your lastName!',\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Email\"\n        name=\"email\"\n        rules={[\n          {\n            message: 'Please input your email!',\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        label=\"cellphone\"\n        name=\"cellphone\"\n        rules={[\n          {\n            message: 'Please input your cellphone!',\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        label=\"birthday\"\n        name=\"birthday\"\n        rules={[\n          {\n            message: 'Please input your birthday!',\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        label=\"Address\"\n        name=\"address\"\n        rules={[\n          {\n            message: 'Please input your birthday!',\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item {...tailLayout}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Register\n        </Button>\n      </Form.Item>\n    </Form>\n    </div>\n    );\n}\nexport default RegisterPage;\n","import React from \"react\";\nimport {Switch, Row, Col, Space} from 'antd'\nimport { Bar } from \"react-chartjs-2\";\n\nconst BarChartComponent = (props) => {\n    const [dataTask, setDataTask] = React.useState(props.config)\n    const [allTaslType, setAllTaskType] =   React.useState(\"bar\")\n    const [donetaskType, setDoneTaskType] =   React.useState(\"bar\")\n    const [unTaskType, setUntaskType] =   React.useState(\"bar\")\n\n    React.useEffect(() => {\n        setDataTask(props.config)\n    },[props.config])\n        return(\n          <>\n              <Row>\n      <Col span={8}>\n      <Space>\n            All task: \n           <Switch\n                checkedChildren=\"line\"\n                unCheckedChildren=\"bar\"\n                onChange={(isChecked) => {\n                    if(isChecked === true){\n                      setAllTaskType('line')\n                    }else{\n                      setAllTaskType('bar')\n                    }\n\n                }}\n            />\n            </Space>\n      </Col>\n      <Col span={8}>\n      <Space>\n            Task done: \n           <Switch\n                checkedChildren=\"line\"\n                unCheckedChildren=\"bar\"\n                onChange={(isChecked) => {\n                    if(isChecked === true){\n                      setDoneTaskType('line')\n                    }else{\n                      setDoneTaskType('bar')\n                    }\n\n                }}\n            />\n            </Space>\n      </Col>\n      <Col span={8}>\n      <Space>\n            Unfinished task: \n           <Switch\n                checkedChildren=\"line\"\n                unCheckedChildren=\"bar\"\n                onChange={(isChecked) => {\n                    if(isChecked === true){\n                      setUntaskType('line')\n                    }else{\n                      setUntaskType('bar')\n                    }\n\n                }}\n            />\n            </Space>\n      </Col>\n    </Row>\n        <Bar\n    data={{\n      labels: dataTask.date,\n      datasets: [\n        {\n          label: \"All Task\",\n          backgroundColor: \"rgba(51, 100, 255, 0.7)\",\n          borderColor: \"rgba(100,100,255,1)\",\n          borderWidth: 1,\n        //   stack: 1,\n          hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\n          hoverBorderColor: \"rgba(255,99,132,1)\",\n          data: dataTask.allTask,\n          type: allTaslType,\n          fill: false,\n        },\n\n        {\n          label: \"Task done\",\n          backgroundColor: \"rgba(86, 255, 138, 1)\",\n          borderColor: \"rgba(255,99,132,1)\",\n          borderWidth: 1,\n        //   stack: 1,\n          hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\n          hoverBorderColor: \"rgba(255,99,132,1)\",\n          data: dataTask.taskDone,\n          type: donetaskType\n        },\n        {\n            label: \"Task Unfinished\",\n            backgroundColor: \"red\",\n            borderColor: \"rgba(255,99,132,1)\",\n            borderWidth: 1,\n            // stack: 1,\n            hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\n            hoverBorderColor: \"rgba(255,99,132,1)\",\n            data: dataTask.taskUnfinished,\n            type: unTaskType,\n          }\n      ]\n    }}\n    options={{\n      legend: { display: true },\n      title: {\n        display: true,\n        text: `Bảng thống kê khối lượng công việc trong ${dataTask.date?dataTask.date.length: \"\"} ngày từ ${dataTask.date?dataTask.date[0]: \"\"} đến ${dataTask.date?dataTask.date[dataTask.date.length - 1]: \"\"}` \n      }\n    }}\n  />\n</>\n    )\n}\n\nexport default BarChartComponent","import React from \"react\";\nimport { Row, Col,Button, DatePicker, Space } from 'antd';\nimport BarChartComponent from '../Components/Bar-chart.component'\nimport {getDataForBarChar} from \"../services/task-bot-discord\"\nimport HeaderPage from '../Components/header-pages'\nimport Notification from \"../Components/nofication-component\";\nimport {\n    SyncOutlined,\n  } from '@ant-design/icons';\n  import moment from \"moment\"\n  const { RangePicker } = DatePicker;\n\n\nconst ManagerTimePage = () => {\n    const [dataTask, setDataTask] = React.useState({})\n\n    React.useEffect( () => {\n         getDataForBarChar().then(data=> {\n            setDataTask(data)\n            if(data){\n                Notification({\n                    type: \"success\",\n                    message: \"Lấy dữ liệu thành công!\"\n                })\n            }else{\n                Notification({\n                    type: \"success\",\n                    message: \"Không có dữ liệu hoặc không lấy được dữ liệu!\"\n                })\n            }\n        })\n    return true\n    }, [])\n\n    function onChange(dates, dateStrings) {\n        const ranger = {\n            startDate: dateStrings[0],\n            endDate: dateStrings[1]\n        }\n        getDataForBarChar(ranger).then(data=> {\n            setDataTask(data)\n            if(data){\n                Notification({\n                    type: \"success\",\n                    message: \"Lấy dữ liệu mới thành công!\"\n                })\n            }\n        })\n      }\n\n    return (\n        <>\n        <HeaderPage onback=\"null\" \n        title=\"Manager Time with matrix EISENHOWER\"\n        extra={[\n            <Space direction=\"vertical\" size={12}>\n                <RangePicker\n                ranges={{\n                        Today: [moment(), moment()],\n                        'This Month': [moment().startOf('month'), moment().endOf('month')],\n                        'This week': [moment().startOf('week'), moment().endOf('week')],\n\n                }}\n                onChange={onChange}   \n            //    showTime\n               />\n                \n            </Space>,\n            <Button type=\"primary\" \n            icon={<SyncOutlined spin/>}\n            onClick={() => {\n                getDataForBarChar().then(data=> {\n                    setDataTask(data)\n                    if(data){\n                        Notification({\n                            type: \"success\",\n                            message: \"Đã load xong dữ liệu mới!\"\n                        })\n                    }\n                })\n            }}>\n                Click to async data\n            </Button>\n        ]}\n        />\n        <Row>\n        <Col span={18} push={6}>\n        <BarChartComponent config={dataTask}/>\n\n        </Col>\n        <Col span={6} pull={18}>\n\n        </Col>\n      </Row>\n      </>\n    )\n}\n\nexport default ManagerTimePage","import React, { useContext } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport './router.css'\nimport LoginPage from \"../pages/Login-page\"\nimport CreateTask from \"../pages/Create.Task-pages\"\nimport TaskManager from \"../pages/manager.task.pages\"\nimport TimeManager from \"../pages/ManagerTime-pages\"\nimport RegisterPage from \"../pages/Register-User.page\"\nimport AnalyticsTaskPage from \"../pages/analytics.Task-page\"\n\nimport {authContext} from '../App'\n\nfunction useAuth() {\n  return useContext(authContext);\n}\n// Some folks find value in a centralized route config.\n// A route config is just data. React is great at mapping\n// data into components, and <Route> is a component.\n\n// Our route config is just an array of logical \"routes\"\n// with `path` and `component` props, ordered the same\n// way you'd do inside a `<Switch>`.\nconst routes = [\n  {\n    path: \"/login\",\n    component: LoginPage\n  },\n  {\n    path: \"/create-task\",\n    component: CreateTask,\n    isPrivate: true\n  },\n  {\n    path: \"/manager-task\",\n    component: TaskManager,\n    isPrivate: true\n  },{\n    path: \"/manager-time\",\n    component: TimeManager,\n    isPrivate: true\n  },\n  {\n    path: \"/analytics-task\",\n    component: AnalyticsTaskPage,\n    isPrivate: true\n  },\n  {\n    path: \"/register\",\n    component: RegisterPage,\n    isPrivate: false\n  }\n\n];\n\nexport default function RouteConfigExample() {\n  return (\n   \n        <Switch>\n          {routes.map((route, i) => (\n            <RouteWithSubRoutes key={i} {...route} />\n          ))}\n        </Switch>\n    \n  );\n}\n\n// A special wrapper for <Route> that knows how to\n// handle \"sub\"-routes by passing them in a `routes`\n// prop to the component it renders.\nfunction RouteWithSubRoutes(route) {\n  \n  if(route.isPrivate){\n    return (\n      <PrivateRoute path={route.path} >\n        <route.component />\n        </PrivateRoute>\n    )\n  }else{\n    return (\n      <Route\n        path={route.path}\n        render={props => (\n          // pass the sub-routes down to keep nesting\n          <route.component {...props} routes={route.routes} />\n        )}\n      />\n    );\n  }\n}\n\nfunction PrivateRoute({ children, ...rest }) {\n  let auth = useAuth();\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        auth.user ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}","import React, { useContext, createContext, useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Link,\n  useHistory,\n} from \"react-router-dom\";\nimport { Layout, Menu} from 'antd';\nimport RouteConfig from './config/router'\nimport { UserOutlined, PlusOutlined, DatabaseOutlined, FundTwoTone, PieChartTwoTone } from '@ant-design/icons';\nimport './App.css'\nconst { Header, Content, Footer, Sider } = Layout;\nexport const authContext = createContext();\n\nfunction useAuth() {\n  return useContext(authContext);\n}\n\nconst App = () =>{\n  return <>\n  <ProvideAuth>\n    <Layout>\n      <Router>      \n        <Sider\n          breakpoint=\"lg\"\n          collapsedWidth=\"0\"\n          onBreakpoint={broken => {\n          }}\n          onCollapse={(collapsed, type) => {\n          }}\n        >\n          <div className=\"logo\" >\n          <AuthButton />\n\n          </div>\n          \n          <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['4']}>\n            <Menu.Item key=\"1\" icon={<UserOutlined />}>\n            <Link to=\"/login\">Login</Link>\n            </Menu.Item>\n            <Menu.Item key=\"2\" icon={<PlusOutlined />}>\n            <Link to=\"/create-task\">Create Task</Link>\n            </Menu.Item>\n            <Menu.Item key=\"3\" icon={<DatabaseOutlined />}>\n            <Link to=\"/manager-task\">Manager Task</Link>\n            </Menu.Item>\n\n            <Menu.Item key=\"4\" icon={<PieChartTwoTone />}>\n            <Link to=\"/manager-time\">Manager Time</Link>\n            </Menu.Item>\n            \n            <Menu.Item key=\"5\" icon={<FundTwoTone />}>\n            <Link to=\"/analytics-task\">Analytic Task</Link>\n            </Menu.Item>\n\n            <Menu.Item key=\"6\" icon={<UserOutlined />}>\n            <Link to=\"/register\">Register</Link>\n            </Menu.Item>\n\n            </Menu>\n        </Sider>\n        <Layout>\n          <Header className=\"site-layout-sub-header-background\" style={{ padding: 0 }} />\n          <Content style={{ margin: '24px 16px 0' }}>\n            <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 360 }}>\n            \n            <RouteConfig /> \n\n            </div>\n          </Content>\n          <Footer style={{ textAlign: 'center' }}>Ant Design ©2018 Created by Ant UED - Tạo bởi Dang Thanh Tung</Footer>\n        </Layout>\n      </Router>\n    </Layout>\n  </ProvideAuth>\n</>\n}\nexport default App;\n\n\nconst fakeAuth = {\n  isAuthenticated: false,\n  signin(cb) {\n    fakeAuth.isAuthenticated = true;\n    setTimeout(cb, 100); // fake async\n  },\n  signout(cb) {\n    fakeAuth.isAuthenticated = false;\n    setTimeout(cb, 100);\n  }\n};\n\nfunction ProvideAuth({ children }) {\n  const auth = useProvideAuth();\n  return (\n    <authContext.Provider value={auth}>\n      {children}\n    </authContext.Provider>\n  );\n}\n\nfunction useProvideAuth() {\n  const [user, setUser] = useState(null);\n\n  const signin = cb => {\n    return fakeAuth.signin(() => {\n      setUser(\"user\");\n      cb();\n    });\n  };\n\n  const signout = cb => {\n    return fakeAuth.signout(() => {\n      setUser(null);\n      cb();\n    });\n  };\n\n  return {\n    user,\n    signin,\n    signout\n  };\n}\n\nfunction AuthButton() {\n  let history = useHistory();\n  let auth = useAuth();\n\n  return auth.user ? (\n    <p>\n      Welcome!{\" \"}\n      <button\n        onClick={() => {\n          auth.signout(() => history.push(\"/\"));\n        }}\n      >\n        Sign out\n      </button>\n    </p>\n  ) : (\n    <p>You are not logged in.</p>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}